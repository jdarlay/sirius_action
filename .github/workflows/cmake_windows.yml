name: CMake Windows

on: workflow_dispatch

jobs:
  cmake:
    runs-on: windows-latest
    steps:
      - name: Setup python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: Install SWIG 4.0.2
        run: |
          (New-Object System.Net.WebClient).DownloadFile("http://prdownloads.sourceforge.net/swig/swigwin-4.0.2.zip","swigwin-4.0.2.zip");
          Expand-Archive .\swigwin-4.0.2.zip .;
          echo "$((Get-Item .).FullName)/swigwin-4.0.2" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      - name: Setup .NET Core 3.1
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.x
      - name: Setup .NET 6.0
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x
      - name: Pip install reqs
        run: python3 -m pip install --user mypy-protobuf absl-py setuptools wheel numpy pandas virtualenv
      - name: Add Python binaries to path
        run: echo "$((Get-Item ~).FullName)/AppData/Roaming/Python/Python310/Scripts" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      - name: Checkout Sirius repo
        uses: actions/checkout@v2
        with:
          repository: rte-france/sirius-solver
          path: ./sirius-solver
          ref: antares_integration
      - name: Configure Sirius
        working-directory: ./sirius-solver
        run: cmake -Ssrc -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=SiriusInstall -G "Visual Studio 16 2019"
      - name: Build & Install Sirius
        working-directory: ./sirius-solver
        run: cmake --build build/ --config Release --target INSTALL -- /maxcpucount
      - name: Upload sirius dll
        uses: actions/upload-artifact@v2
        with:
          name: sirius_solver
          path: ./sirius-solver/SiriusInstall/bin/sirius_solver.dll
      - name: Add Sirius bin to path
        shell: bash
        run: echo "${{ github.workspace }}\sirius-solver\SiriusInstall\bin" >> $GITHUB_PATH
      - name: Checkout xpressmp813Win
        uses: actions/checkout@v2
        with:
          repository: jdarlay/xpressmp813Win
          path: ./xpressmp813
          ref: master
          token: ${{ secrets.ACCESS_TOKEN }}
      - name: Add xpress bin to path
        shell: bash
        run: echo "${{ github.workspace }}\xpressmp813\bin" >> $GITHUB_PATH
      - name: Checkout or-tools
        uses: actions/checkout@v2
        with:
          repository: jdarlay/or-tools
          path: ./or-tools
          ref: rte_dev_ls
      - name: Configure or-tools
        working-directory: ./or-tools
        run: cmake -S. -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX="build/install" -G "Visual Studio 16 2019" -DBUILD_DEPS=ON -DUSE_SIRIUS=ON -Dsirius_solver_DIR="${{ github.workspace }}/sirius-solver/SiriusInstall/cmake" -DUSE_XPRESS=ON -DXPRESS_ROOT="${{ github.workspace }}/xpressmp813" -DBUILD_PYTHON=ON -DBUILD_JAVA=ON -DBUILD_DOTNET=ON
      - name: Build tests
        working-directory: ./or-tools
        run: cmake --build build --config Release --target ALL_BUILD INSTALL -v -- /maxcpucount
      - name: Prepare ortools install
        working-directory: ./or-tools/build
        shell: bash
        run: |
          mkdir -p install_artifact/cmake
          mkdir -p install_artifact/lib
          cp install/lib/cmake/ortools/ortoolsTargets*.cmake install_artifact/cmake
          cp install/lib/ortools.lib install_artifact/lib
          cd install
          find . -type f -wholename './include/ortools/*.h' -exec cp --parents '{}' ../install_artifact \;
          find . -type f -wholename './include/absl/*.h' -exec cp --parents '{}' ../install_artifact \;
          find . -type f -wholename './include/google/*.h' -exec cp --parents '{}' ../install_artifact \;
      - name: Upload ortools install
        uses: actions/upload-artifact@v2
        with:
          name: ortools_install
          path: ./or-tools/build/install_artifact
      - name: Upload ortools wheel
        uses: actions/upload-artifact@v2
        with:
          name: ortools_wheel
          path: './or-tools/build/python/dist/*.whl'
      - name: Upload ortools jar
        uses: actions/upload-artifact@v2
        with:
          name: ortools_jar
          path: ./or-tools/build/java/ortools-*/target/*.jar
      - name: Upload ortools dotnet
        uses: actions/upload-artifact@v2
        with:
          name: ortools_dotnet
          path: |
            ./or-tools/build/dotnet/packages/Google.OrTools.[0-9]*.[0-9]*.[0-9]*.nupkg
            ./or-tools/build/dotnet/packages/Google.OrTools.runtime.*.[0-9]*.[0-9]*.[0-9]*.nupkg
      - name: Run sirius_interface unittests
        working-directory: ./or-tools/build
        env:
          XPRESS: "${{ github.workspace }}/xpressmp813/bin/"
        run: ctest -V -C Release -R 'cxx_unittests_sirius_interface'
      - name: Run xpress_interface unittests
        working-directory: ./or-tools/build
        env:
          XPRESS: "${{ github.workspace }}/xpressmp813/bin/"
        run: ctest -V -C Release -R 'cxx_unittests_xpress_interface'
      - name: Run specific cpp tests
        working-directory: ./or-tools/build
        env:
          XPRESS: "${{ github.workspace }}/xpressmp813/bin/"
        run: ctest -V -C Release -R cxx_cpp_linear_programming
      - name: Run specific python tests
        working-directory: ./or-tools/build
        run: ctest -V -C Release -R python_python_linear_programming
        env:
          XPRESS: "${{ github.workspace }}/xpressmp813/bin/"
          SIRIUS_BIN_DIR: "${{ github.workspace }}/sirius-solver/SiriusInstall/bin"
          XPRESS_BIN_DIR: "${{ github.workspace }}/xpressmp813/bin"
      - name: Run specific java tests
        working-directory: ./or-tools/build
        env:
          XPRESS: "${{ github.workspace }}/xpressmp813/bin/"
        run: ctest -V -C Release -R java_java_LinearProgramming
      - name: Run specific dotnet tests
        working-directory: ./or-tools/build
        env:
          XPRESS: "${{ github.workspace }}/xpressmp813/bin/"
        run: ctest -V -C Release -R dotnet_dotnet_cslinearprogramming
      - name: Run other cpp tests
        working-directory: ./or-tools/build
        env:
          XPRESS: "${{ github.workspace }}/xpressmp813/bin/"
        run: ctest -V -C Release -R cxx_cpp -E cxx_cpp_linear_programming
      - name: Run other java tests
        working-directory: ./or-tools/build
        env:
          XPRESS: "${{ github.workspace }}/xpressmp813/bin/"
        run: ctest -V -C Release -R java_java -E java_java_LinearProgramming
      - name: Run other dotnet tests
        working-directory: ./or-tools/build
        env:
          XPRESS: "${{ github.workspace }}/xpressmp813/bin/"
        run: ctest -V -C Release -R dotnet_dotnet -E dotnet_dotnet_cslinearprogramming
